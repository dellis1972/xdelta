jobs:
- job: BuildMac
  displayName: Build MacOS, Windows and Android
  pool:
    vmImage: xcode9-macos10.13
  steps:
  - script: |
      brew tap xamarin/xamarin-android-windeps
      brew upgrade https://raw.githubusercontent.com/Homebrew/homebrew-core/a6542037a48a55061a4c319e6bb174b3715f7cbe/Formula/mingw-w64.rb
      brew install mingw-w64
      brew install ninja xamarin/xamarin-android-windeps/mingw-zlib p7zip
    displayName: 'Install Tools'
  - bash: |
      cd xdelta3
      ./build_native
    displayName: 'Build Darwin'
  - bash: |
      cd xdelta3
      ./build_windows
    displayName: 'Build Windows'
  - bash: |
      cd xdelta3
      ./build_android
    displayName: 'Build Android'
    env:
      OUTPUT: $(Build.ArtifactStagingDirectory)
  - task: ArchiveFiles@2
    displayName: 'Archive MacOS'
    inputs:
      rootFolderOrFile: xdelta3/build/Darwin/xdelta3
      includeRootFolder: false 
      archiveType: 7z
      archiveFile: $(Build.ArtifactStagingDirectory)/xdelta-3.0-macos.7z
  - task: ArchiveFiles@2
    displayName: 'Archive Windows'
    inputs:
      rootFolderOrFile: xdelta3/build/Windows/64/xdelta3.exe
      includeRootFolder: false 
      archiveType: 7z
      archiveFile: $(Build.ArtifactStagingDirectory)/xdelta-3.0-windows.7z
  - task: PublishBuildArtifacts@1
    displayName: upload artifacts
    inputs:
      artifactName: xdelta3
      pathtoPublish: $(Build.ArtifactStagingDirectory)
- job: BuildLinux
  displayName: Build Linux
  pool:
    vmImage: 'Ubuntu-16.04'
  steps:
  - script: |
      sudo apt -y update
      sudo apt install ninja-build -y
    displayName: 'Install Tools'
  - bash: |
      cd xdelta3
      ./build_native
    displayName: 'Build Linux'
  - task: ArchiveFiles@2
    inputs:
      rootFolderOrFile: xdelta3/build/Linux/xdelta3
      includeRootFolder: false 
      archiveType: 7z
      archiveFile: $(Build.ArtifactStagingDirectory)/xdelta-3.0-linux.7z
  - task: PublishBuildArtifacts@1
    displayName: upload artifacts
    inputs:
      artifactName: xdelta3
      pathtoPublish: $(Build.ArtifactStagingDirectory)
- job: BuildWindows
  displayName: 'Build Windows'
  pool:
    vmImage: windows-2019
  steps:
  - task: PowerShell@2
    targetType: filePath
    filePath: .\xdelta3\windowsconfig.ps1
    workingDirectory: .\xdelta3
    displayName: Configure Build'
  - task: MSBuild@1
    displayName: 'Build Project xdelta3\xdelta3.vcxproj'
    inputs:
      solution: xdelta3\xdelta3.vcxproj
      configuration: xdelta3-64
- job: BuildNuget
  displayName: 'Build Nuget'
  dependsOn:
  - BuildLinux
  - BuildMac
  - BuildWindows
  pool:
    vmImage: xcode9-macos10.13
  steps:
    - script: |
        brew install p7zip
      displayName: 'Install Tools'
    - task: DownloadBuildArtifacts@0
      displayName: download artifacts
      inputs:
        artifactName: xdelta3
        downloadPath: $(Build.ArtifactStagingDirectory)
    - task: ExtractFiles@1
      displayName: Extract Linux native
      inputs:
        archiveFilePatterns: $(Build.ArtifactStagingDirectory)/xdelta3/xdelta-3.0-linux.7z
        destinationFolder: xdelta3/build/Linux
    - task: ExtractFiles@1
      displayName: Extract MacOS Native
      inputs:
        archiveFilePatterns: $(Build.ArtifactStagingDirectory)/xdelta3/xdelta-3.0-macos.7z
        destinationFolder: xdelta3/build/Darwin
    - task: ExtractFiles@1
      displayName: Extract Windows Native
      inputs:
        archiveFilePatterns: $(Build.ArtifactStagingDirectory)/xdelta3/xdelta-3.0-windows.7z
        destinationFolder: xdelta3/build/Windows/64
    - task: ExtractFiles@1
      displayName: Extract Android Native
      inputs:
        archiveFilePatterns: $(Build.ArtifactStagingDirectory)/xdelta3/xdelta-3.0-android.7z
        destinationFolder: xdelta3/build/Android
    - task: DeleteFiles@1
      displayName: Delete archives
      inputs:
          sourceFolder: $(Build.ArtifactStagingDirectory)
          contents: 'xdelta3'
    - task: NuGetCommand@2
      displayName: package nuget
      inputs:
        command: custom
        arguments: pack xdelta3/xdelta.nuspec -OutputDirectory $(Build.ArtifactStagingDirectory)
    - task: PublishBuildArtifacts@1
      displayName: upload artifacts
      inputs:
        artifactName: 'nuget'
        pathtoPublish: $(Build.ArtifactStagingDirectory)

